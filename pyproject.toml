#################################### black ####################################
[tool.black]
target-version = ['py39']
exclude = '''
(
    migrations
    | .mypy_cache
    | .pytest_cache
    | .venv
)
'''


################################### coverage ###################################
[tool.coverage]
[tool.coverage.run]
branch = true
cover_pylib = false
source = ["momoichigo/app/"]
omit = [
    ".venv/*",
    ".pytest_cache/*",
    "*/__pycache__/*",
    "tests/*",
    "momoichigo/app/migrations/*",
]

[tool.coverage.paths]
source = ["momoichigo"]


#################################### isort #####################################
[tool.isort]
profile = "black"
src_paths = ["momoichigo"]
skip = ["migrations"]


#################################### pytest ####################################
[tool.pytest]
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "-ra",
    "-vv",
#    "-x",
#    "--lf",
    "--durations=5",
    "--durations-min=0.3",
    "--cov",
    "--cov-branch",
    "--cov-report=xml",
    "--cov-report=term",
]
testpaths = ["tests"]
python_files = ["tests.py", "test_*.py", "*_tests.py"]
markers = [
    "unit: tests that are isolated from the db, external api calls and other mockable internal code.",
    "enable_signals: tests that are enable django signals (default:disabled)."
]
filterwarnings = [
    "ignore::pytest.PytestUnhandledThreadExceptionWarning",
]
required_plugins = [
    "pytest-django",
    "pytest-cov",
]
DJANGO_SETTINGS_MODULE = "momoichigo.settings"


#################################### mypy ####################################
[tool.mypy]
python_version = 3.9
ignore_missing_imports = true
disallow_untyped_defs = true
# warn_return_any = true
warn_unused_configs = true
files = [
    "momoichigo/**/*.py"
]
[[tool.mypy.overrides]]
module = "momoichigo.app.migrations.*"
ignore_errors = true


#################################### poerty ####################################
[tool.poetry]
name = "momoichigo"
version = "0.1.5"
description = "ICHIGO KOHINATA"
authors = ["nothink <gakongakon@gmail.com>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.9"
Django = {extras = ["argon2"], version = "^3.2.7"}
djangorestframework = "^3.12.4"
django-environ = "^0.7.0"
django-storages = {extras = ["google"], version = "^1.12"}
django-cors-headers = "^3.9.0"
PyYAML = "^5.4.1"
uritemplate = "^3.0.1"
uvicorn = "^0.15.0"
gunicorn = "^20.1.0"
psycopg2 = "^2.9.1"
requests = "^2.26.0"
pendulum = "^2.1.2"
google-cloud-secret-manager = "^2.7.2"
slack-sdk = "^3.11.2"
google-cloud-logging = "^2.6.0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-django = "^4.4.0"
black = "*"
isort = {extras = ["pyproject"], version = "^5.9.3"}
flake8 = "^3.9.2"
flake8-django = "^1.1.2"
flake8-black = "^0.2.3"
flake8-isort = "^4.0.0"
flake8-print = "^4.0.0"
flake8-annotations = "^2.6.2"
flake8-docstrings = "^1.6.0"
pre-commit = "^2.15.0"
mypy = "*"
types-requests = "^2.25.9"
model-bakery = "^1.3.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
