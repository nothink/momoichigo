name: Build Image

on:
  push:
    branches: [main]

env:
  # Name of Docker images
  USER_NAME: nothink
  IMAGE_NAME: momoichigo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9

      - name: Install Poetry
        run: pip install poetry semver

      - name: Get Current Version from pyproject.toml
        id: current_version
        run: |
          current=$(poetry version -s)
          echo ${current}
          echo ::set-output name=VERSION::${current}

      - name: 'Get Previous tag'
        id: previoustag
        uses: 'WyriHaximus/github-action-get-previous-tag@v1'
        with:
          fallback: v0.0.0

      - name: Get Timestamp
        uses: nanzm/get-time-action@v1.1
        id: timestamp
        with:
          timeZone: 9
          format: 'YYYYMMDDHHmmss'

      - name: Check that version is bumped
        id: version_is_bumped
        run: |
          poetry_ver=${{ steps.current_version.outputs.VERSION }}
          tag_ver=${{ steps.previoustag.outputs.tag }}
          compare=`pysemver compare $poetry_ver ${tag_ver/v/}`
          if [ $compare -gt 0 ]; then
            echo ::set-output name=BUMPED::true
          else
            echo ::set-output name=BUMPED::false
          fi

      - name: Create next tag name of Docker Image
        id: create_image_tag
        run: |
          if [ "${{ steps.version_is_bumped.outputs.BUMPED }}" = "true" ]; then
            echo ::set-output name=TAG::${{ steps.current_version.outputs.VERSION }}
          else
            echo ::set-output name=TAG::${{ steps.current_version.outputs.VERSION }}-${{ steps.timestamp.outputs.time }}
          fi

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Google Container Registry
        uses: docker/login-action@v1
        with:
          registry: asia.ghcr.io
          username: _json_key
          password: ${{ secrets.GCR_JSON_KEY }}

      # Tagging new version (when tagged)
      - name: Commit new version tag
        if: steps.version_is_bumped.outputs.BUMPED == 'true'
        uses: tvdias/github-tagger@v0.0.2
        with:
          repo-token: '${{ secrets.GITHUB_TOKEN }}'
          tag: v${{ steps.current_version.outputs.VERSION }}

      - name: Build and Push Images
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ env.USER_NAME }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.USER_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.create_image_tag.outputs.TAG }}
            asia.ghcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:latest
            asia.ghcr.io/${{ env.GCP_PROJECT_ID }}/${{ env.IMAGE_NAME }}:${{ steps.create_image_tag.outputs.TAG }}

      - name: Create Release when Version is bumped
        if: steps.version_is_bumped.outputs.BUMPED == 'true'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.current_version.outputs.VERSION }}
          release_name: v${{ steps.current_version.outputs.VERSION }}
          draft: false
          prerelease: false
