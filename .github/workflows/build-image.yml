name: Build Image

on:
  push:
    branches: [main]

env:
  # Name of Docker images
  USER_NAME: nothink
  IMAGE_NAME: momoichigo

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Poetry
        run: |
          curl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/install-poetry.py | python -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          poetry config virtualenvs.in-project true

      - name: Get Timestamp
        uses: nanzm/get-time-action@v1.1
        with:
          timeZone: 9
          format: 'YYYYMMDDHHmmss'

      - name: Get Current Version
        id: current_version
        run: |
          current=$(poetry version -s)
          echo ${current}
          echo ::set-output name=VERSION::${current}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Container Registry
        id: login
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Image
        id: docker_build_push
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: |
            ghcr.io/${{ env.USER_NAME }}/${{ env.IMAGE_NAME }}:latest
            ghcr.io/${{ env.USER_NAME }}/${{ env.IMAGE_NAME }}:${{ steps.current_version.outputs.VERSION }}-${{ steps.time.outputs.time }}

      # - name: Create Release
      #   id: create_release
      #   uses: actions/create-release@v1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
